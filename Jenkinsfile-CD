pipeline {
    agent { label 'docker' }
    environment {
        AWS_REGION = 'us-east-1'
        ECR_APP_REPO = '992382545251.dkr.ecr.us-east-1.amazonaws.com/statuspage-bop'
        ECR_NGINX_REPO = '992382545251.dkr.ecr.us-east-1.amazonaws.com/nginx-bop'
        AWS_CREDENTIALS_ID = 'aws-jenkins-creds'
    }

    stages {
        stage('Deploy Application') {
            steps {
                script {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: AWS_CREDENTIALS_ID]]) {
                        sh 'aws eks --region $AWS_REGION update-kubeconfig --name bop-eks-cluster'
                        sh "kubectl set image deployment/statuspage statuspage=$ECR_APP_REPO:latest"
                        sh "kubectl rollout restart deployment/statuspage"
                        sh 'kubectl apply -f EKS-resources/statuspage-deployment.yaml'
                        sh 'kubectl apply -f EKS-resources/statuspage-service.yaml'
                    }
                }
            }
        }

        stage('Deploy Nginx') {
            steps {
                script {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: AWS_CREDENTIALS_ID]]) {
                        sh 'aws eks --region $AWS_REGION update-kubeconfig --name bop-eks-cluster'
                        sh "kubectl set image deployment/nginx nginx=$ECR_NGINX_REPO:latest"
                        sh "kubectl rollout restart deployment/nginx"
                        sh 'kubectl apply -f EKS-resources/nginx-deployment.yaml'
                        sh 'kubectl apply -f EKS-resources/nginx-service.yaml'
                    }
                }
            }
        }

        stage('Deployment Validation') {
            steps {
                script {
                    sh 'kubectl rollout status deployment/statuspage'
                    sh 'kubectl rollout status deployment/nginx'
                    sh 'curl -f https://statuspage.lingiops.com/health'
                }
            }
        }

        stage('Rollback Simulation') {
            steps {
                script {
                    sh 'kubectl rollout undo deployment/statuspage'
                    sh 'kubectl rollout undo deployment/nginx'
                }
            }
        }
    }

    post {
        success {
            echo 'CD pipeline completed successfully!'
        }
        failure {
            echo 'CD pipeline failed.'
        }
    }
}
