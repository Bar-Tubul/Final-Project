# Statuspage server block
server {
    listen 443 ssl;
    server_name statuspage-bop.yoram-izilov.com;

    ssl_certificate /etc/ssl/certs/status-page.crt;
    ssl_certificate_key /etc/ssl/private/status-page.key;

    client_max_body_size 25m;

    location /static/ {
        alias /app/nginx/static/;
    }

    location / {
        proxy_pass http://statuspage-service:8001;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Prometheus server block
server {
    listen 443 ssl;
    server_name prometheus-bop.yoram-izilov.com;

    ssl_certificate /etc/ssl/certs/prometheus.crt;
    ssl_certificate_key /etc/ssl/private/prometheus.key;

    location / {
        proxy_pass http://bop-kube-prometheus-stack-prometheus.monitoring:9090;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Grafana server block
server {
    listen 443 ssl;
    server_name grafana-bop.yoram-izilov.com;

    ssl_certificate /etc/ssl/certs/grafana.crt;
    ssl_certificate_key /etc/ssl/private/grafana.key;

    location / {
        proxy_pass http://bop-grafana.monitoring;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# NGINX Metrics server block
server {
    listen 127.0.0.1:8080;  # Local access within the pod
    server_name localhost;

    location /stub_status {
        stub_status on;        # Enable basic NGINX metrics for the exporter
        allow 127.0.0.1;       # Restrict access to localhost
        deny all;
    }
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name _;
    return 301 https://$host$request_uri;
}

